$date
	Sat Apr 12 18:53:51 2025
$end
$version
	QuestaSim Version 10.7c
$end
$timescale
	1ns
$end

$scope module dff_tb $end

$scope module tif $end
$var reg 1 ! clk $end
$var reg 1 " rstn $end
$var reg 1 # d $end
$var reg 1 $ q $end
$upscope $end
$upscope $end

$scope begin uvm_pkg $end
$var parameter 32 % UVM_HDL_MAX_WIDTH $end
$var parameter 32 & UVM_STREAMBITS $end
$var parameter 32 ' UVM_RADIX $end
$var parameter 32 ( UVM_MACRO_NUMFLAGS $end
$var parameter 32 ) UVM_DEFAULT $end
$var parameter 32 * UVM_ALL_ON $end
$var parameter 32 + UVM_FLAGS_ON $end
$var parameter 32 , UVM_FLAGS_OFF $end
$var parameter 32 - UVM_COPY $end
$var parameter 32 . UVM_NOCOPY $end
$var parameter 32 / UVM_COMPARE $end
$var parameter 32 0 UVM_NOCOMPARE $end
$var parameter 32 1 UVM_PRINT $end
$var parameter 32 2 UVM_NOPRINT $end
$var parameter 32 3 UVM_RECORD $end
$var parameter 32 4 UVM_NORECORD $end
$var parameter 32 5 UVM_PACK $end
$var parameter 32 6 UVM_NOPACK $end
$var parameter 32 7 UVM_PHYSICAL $end
$var parameter 32 8 UVM_ABSTRACT $end
$var parameter 32 9 UVM_READONLY $end
$var parameter 32 : UVM_NODEFPRINT $end
$var parameter 32 ; UVM_MACRO_EXTRAS $end
$var parameter 32 < UVM_FLAGS $end
$var parameter 32 = UVM_UNPACK $end
$var parameter 32 > UVM_CHECK_FIELDS $end
$var parameter 32 ? UVM_END_DATA_EXTRA $end
$var parameter 32 @ UVM_START_FUNCS $end
$var parameter 32 A UVM_SET $end
$var parameter 32 B UVM_SETINT $end
$var parameter 32 C UVM_SETOBJ $end
$var parameter 32 D UVM_SETSTR $end
$var parameter 32 E UVM_END_FUNCS $end
$var parameter 32 F UVM_STR_CRC_POLYNOMIAL $end
$var parameter 32 G UVM_STDOUT $end
$var parameter 32 H UVM_LINE_WIDTH $end
$var parameter 32 I UVM_NUM_LINES $end
$var parameter 32 J UVM_SMALL_STRING $end
$var parameter 32 K UVM_LARGE_STRING $end
$var reg 1 L uvm_start_uvm_declarations $end
$var integer 32 M uvm_global_random_seed $end
$var integer 32 N UVM_UNBOUNDED_CONNECTIONS $end

$scope function uvm_hdl_check_path $end
$var integer 32 O uvm_hdl_check_path $end
$upscope $end

$scope function uvm_hdl_deposit $end
$var integer 32 P uvm_hdl_deposit $end
$var reg 1024 Q value [1023:0] $end
$upscope $end

$scope function uvm_hdl_force $end
$var integer 32 R uvm_hdl_force $end
$var reg 1024 S value [1023:0] $end
$upscope $end

$scope task uvm_hdl_force_time $end
$var reg 1024 T value [1023:0] $end
$var time 64 U force_time $end
$upscope $end

$scope function uvm_hdl_release_and_read $end
$var integer 32 V uvm_hdl_release_and_read $end
$var reg 1024 W value [1023:0] $end
$upscope $end

$scope function uvm_hdl_release $end
$var integer 32 X uvm_hdl_release $end
$upscope $end

$scope function uvm_hdl_read $end
$var integer 32 Y uvm_hdl_read $end
$var reg 1024 Z value [1023:0] $end
$upscope $end

$scope function uvm_dpi_regexec $end
$var integer 32 [ uvm_dpi_regexec $end
$upscope $end

$scope function uvm_re_match $end
$var integer 32 \ uvm_re_match $end
$upscope $end

$scope function uvm_radix_to_string $end
$var integer 32 ] radix $end
$upscope $end

$scope function uvm_instance_scope $end
$var reg 8 ^ c [7:0] $end
$var integer 32 _ pos $end
$upscope $end

$scope function uvm_oneway_hash $end
$var integer 32 ` uvm_oneway_hash $end
$var integer 32 a seed $end
$var reg 1 b msb $end
$var reg 8 c current_byte [7:0] $end
$var reg 32 d crc1 [31:0] $end
$upscope $end

$scope function uvm_create_random_seed $end
$var integer 32 e uvm_create_random_seed $end
$upscope $end

$scope function uvm_leaf_scope $end
$var reg 8 f scope_separator [7:0] $end
$var reg 8 g bracket_match [7:0] $end
$var integer 32 h pos $end
$var integer 32 i bmatches $end
$upscope $end

$scope function uvm_vector_to_string $end
$var reg 4096 j value [4095:0] $end
$var integer 32 k size $end
$var integer 32 l radix $end
$upscope $end

$scope function uvm_get_array_index_int $end
$var integer 32 m uvm_get_array_index_int $end
$var reg 1 n is_wildcard $end
$var integer 32 o i $end
$upscope $end

$scope function uvm_get_array_index_string $end
$var reg 1 p is_wildcard $end
$var integer 32 q i $end
$upscope $end

$scope function uvm_is_array $end
$var reg 1 r uvm_is_array $end
$upscope $end

$scope function set_global_timeout $end
$var time 64 s timeout $end
$var reg 1 t overridable $end
$upscope $end

$scope function set_global_stop_timeout $end
$var time 64 u timeout $end
$upscope $end

$scope function uvm_report_enabled $end
$var reg 1 v uvm_report_enabled $end
$var integer 32 w verbosity $end
$var reg 2 x severity [1:0] $end
$upscope $end

$scope function uvm_report $end
$var reg 2 y severity [1:0] $end
$var integer 32 z verbosity $end
$var integer 32 { line $end
$upscope $end

$scope function uvm_report_info $end
$var integer 32 | verbosity $end
$var integer 32 } line $end
$upscope $end

$scope function uvm_report_warning $end
$var integer 32 ~ verbosity $end
$var integer 32 !! line $end
$upscope $end

$scope function uvm_report_error $end
$var integer 32 "! verbosity $end
$var integer 32 #! line $end
$upscope $end

$scope function uvm_report_fatal $end
$var integer 32 $! verbosity $end
$var integer 32 %! line $end
$upscope $end

$scope function uvm_string_to_severity $end
$var reg 1 &! uvm_string_to_severity $end
$var reg 2 '! sev [1:0] $end
$upscope $end

$scope function set_config_int $end
$var reg 4096 (! value [4095:0] $end
$upscope $end

$scope function set_config_object $end
$var reg 1 )! clone $end
$upscope $end

$scope function uvm_is_match $end
$var reg 1 *! uvm_is_match $end
$upscope $end

$scope function uvm_string_to_bits $end
$var reg 115200 +! uvm_string_to_bits [115199:0] $end
$upscope $end

$scope function uvm_bits_to_string $end
$var reg 115200 ,! str [115199:0] $end
$upscope $end

$scope task uvm_wait_for_nba_region $end
$var integer 32 -! nba $end
$var integer 32 .! next_nba $end
$upscope $end
$upscope $end

$scope module uvm_root $end
$upscope $end

$scope module dff_tb $end
$upscope $end

$scope begin uvm_pkg $end

$scope function uvm_hdl_check_path $end
$upscope $end

$scope function uvm_hdl_deposit $end
$upscope $end

$scope function uvm_hdl_force $end
$upscope $end

$scope task uvm_hdl_force_time $end
$upscope $end

$scope function uvm_hdl_release_and_read $end
$upscope $end

$scope function uvm_hdl_release $end
$upscope $end

$scope function uvm_hdl_read $end
$upscope $end

$scope function uvm_dpi_get_next_arg_c $end
$upscope $end

$scope function uvm_dpi_get_tool_name_c $end
$upscope $end

$scope function uvm_dpi_get_tool_version_c $end
$upscope $end

$scope function uvm_dpi_get_next_arg $end
$upscope $end

$scope function uvm_dpi_get_tool_name $end
$upscope $end

$scope function uvm_dpi_get_tool_version $end
$upscope $end

$scope function uvm_dpi_regcomp $end
$upscope $end

$scope function uvm_dpi_regexec $end
$upscope $end

$scope function uvm_dpi_regfree $end
$upscope $end

$scope function uvm_re_match $end
$upscope $end

$scope function uvm_dump_re_cache $end
$upscope $end

$scope function uvm_glob_to_re $end
$upscope $end

$scope function uvm_revision_string $end
$upscope $end

$scope function uvm_radix_to_string $end
$upscope $end

$scope function uvm_instance_scope $end
$upscope $end

$scope function uvm_oneway_hash $end
$upscope $end

$scope function uvm_create_random_seed $end
$upscope $end

$scope function uvm_object_value_str $end
$upscope $end

$scope function uvm_leaf_scope $end
$upscope $end

$scope function uvm_vector_to_string $end
$upscope $end

$scope function uvm_get_array_index_int $end
$upscope $end

$scope function uvm_get_array_index_string $end
$upscope $end

$scope function uvm_is_array $end
$upscope $end

$scope function uvm_has_wildcard $end
$upscope $end

$scope task run_test $end
$upscope $end

$scope function global_stop_request $end
$upscope $end

$scope function set_global_timeout $end
$upscope $end

$scope function set_global_stop_timeout $end
$upscope $end

$scope function uvm_report_enabled $end
$upscope $end

$scope function uvm_report $end
$upscope $end

$scope function uvm_report_info $end
$upscope $end

$scope function uvm_report_warning $end
$upscope $end

$scope function uvm_report_error $end
$upscope $end

$scope function uvm_report_fatal $end
$upscope $end

$scope function uvm_string_to_severity $end
$upscope $end

$scope function uvm_string_to_action $end
$upscope $end

$scope function set_config_int $end
$upscope $end

$scope function set_config_object $end
$upscope $end

$scope function set_config_string $end
$upscope $end

$scope function uvm_is_match $end
$upscope $end

$scope function uvm_string_to_bits $end
$upscope $end

$scope function uvm_bits_to_string $end
$upscope $end

$scope task uvm_wait_for_nba_region $end
$upscope $end

$scope function uvm_split_string $end
$upscope $end

$scope function uvm_hdl_concat2string $end
$upscope $end
$upscope $end

$scope begin dff_pkg $end
$upscope $end

$scope begin std $end
$upscope $end

$scope begin questa_uvm_pkg $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0p
0r
0&!
b0 '!
bx +!
bx ,!
bx Q
bx S
bx T
bx W
bx Z
1L
1b
b1101101 c
b1110010100011001011010101000101 d
bx j
0n
0t
0v
b0 x
b0 y
bx (!
0)!
0*!
0!
0"
0#
0$
b10000000000 %
b1000000000000 &
b1111000000000000000000000000 '
b10001 (
b10101010101 )
b101010101 *
b101010101 +
b0 ,
b1 -
b10 .
b100 /
b1000 0
b10000 1
b100000 2
b1000000 3
b10000000 4
b100000000 5
b1000000000 6
b10000000000000 7
b100000000000000 8
b1000000000000000 9
b10000000000000000 :
b100000000000000000 ;
b100000000000000001 <
b100000000000000010 =
b100000000000000011 >
b100000000000000100 ?
b100000000000000101 @
b100000000000000110 A
b100000000000000110 B
b100000000000000111 C
b100000000000001000 D
b100000000000001000 E
b100110000010001110110110110 F
b1 G
b1111000 H
b1111000 I
b1110111111 J
b11100000111111111 K
b0 ]
b0 f
b0 g
b0 h
b0 i
b0 q
b0 O
b0 P
b0 R
b0 V
b0 X
b0 Y
b1 [
b0 \
b1101001011000001111100000011110 M
b101110 ^
b111 _
b100011101010110110101110101011 `
b1101001011000001111100000011110 a
b10011110101100000101011011000111 e
b0 k
b0 l
b0 m
b0 o
b111110100 w
b0 z
b0 {
b11001000 |
b11011000 }
b0 ~
b0 !!
b0 "!
b0 #!
b0 $!
b0 %!
b100011 -!
b100011 .!
b11111111111111111111111111111111 N
bx U
bx s
bx u
$end
#5
1!
#10
0!
#15
1!
b100100 .!
1"
b100100 -!
#20
0!
#25
1!
b100101 .!
b100011101010110110101110101100 e
b100101 -!
#30
0!
#35
1!
b100110 .!
b100011101010110110101110101110 e
1#
b100110 -!
#40
0!
#45
1!
b100111 .!
b100011101010110110101110110001 e
b100111 -!
1$
#50
0!
#55
1!
b101000 .!
b100011101010110110101110110101 e
b101000 -!
#60
0!
#65
1!
b101001 .!
b100011101010110110101110111010 e
b101001 -!
#70
0!
#75
1!
b101010 .!
b100011101010110110101111000000 e
0#
b101010 -!
#80
0!
#85
1!
b101011 .!
b100011101010110110101111000111 e
1#
b101011 -!
0$
#90
0!
#95
1!
b101100 .!
b100011101010110110101111001111 e
b101100 -!
1$
#100
0!
#105
1!
b101101 .!
b100011101010110110101111011000 e
b101101 -!
#110
0!
#115
1!
b101110 .!
b100011101010110110101111100010 e
b101110 -!
#120
0!
#125
1!
b101111 .!
b100011101010110110101111101101 e
b101111 -!
#130
0!
#135
1!
b110000 .!
b100011101010110110101111111001 e
b110000 -!
#140
0!
#145
1!
b110001 .!
b100011101010110110110000000110 e
b110001 -!
#150
0!
#155
1!
b110010 .!
b100011101010110110110000010100 e
0#
b110010 -!
#160
0!
#165
1!
b110011 .!
b100011101010110110110000100011 e
1#
b110011 -!
0$
#170
0!
#175
1!
b110100 .!
b100011101010110110110000110011 e
0#
b110100 -!
1$
#180
0!
#185
1!
b110101 .!
b100011101010110110110001000100 e
b110101 -!
0$
#190
0!
#195
1!
b110110 .!
b100011101010110110110001010110 e
1#
b110110 -!
#200
0!
#205
1!
b110111 .!
b100011101010110110110001101001 e
b110111 -!
1$
#210
0!
#215
1!
b111000 .!
b111000 -!
#220
0!
#225
1!
#230
0!
#235
1!
b111001 .!
b111010 .!
b111001 -!
b111010 -!
b111011 .!
b111100 .!
b111011 -!
b111100 -!
b10011110101100000101011011011001 e
b11001101001110100010000011011110 e
b11010101110111100010100100101010 e
b10100011111111110111011011000010 e
b10101010101111011110010001011 e
b101011001011111001100101001 e
b11010000100000100010000011000111 e
b1001100001010010101100010101110 e
b11111001011101000110000011001001 e
b10100110000100010000001000110111 e
b1100101100001000100010101111101 e
b10000001010100001111001010001101 e
b10110110110100100100101001101001 e
b11101100000001101010010010111100 e
b11001100000110011101010101010 e
b1100101110010100000011100111111 e
b11011001000000010011011000100100 e
b11101100010001100010100101100100 e
b111000101000011100110011010010 e
b10110011110000000100000100101010 e
b11000001111011101111000100110010 e
b10101111010011111001000011110111 e
b10100010000010011100111101111010 e
b111000011000110011100110101111 e
b11011100000111001000010000111110 e
b10011110101100000101011011101100 e
b11001101001110100010000011110001 e
b11010101110111100010100100111101 e
b10100011111111110111011011010101 e
b10101010101111011110010011110 e
b101011001011111001100111100 e
b11010000100000100010000011011010 e
b1001100001010010101100011000001 e
b11111001011101000110000011011100 e
b10100110000100010000001001001010 e
b1100101100001000100010110010000 e
b10000001010100001111001010100000 e
b10110110110100100100101001111100 e
b11101100000001101010010011001111 e
b11001100000110011101010111101 e
b1100101110010100000011101010010 e
b11011001000000010011011000110111 e
b11101100010001100010100101110111 e
b111000101000011100110011100101 e
b10110011110000000100000100111101 e
b11000001111011101111000101000101 e
b10101111010011111001000100001010 e
b10100010000010011100111110001101 e
b111000011000110011100111000010 e
b11011100000111001000010001010001 e
b10011110101100000101011100000000 e
b11001101001110100010000100000101 e
b11010101110111100010100101010001 e
b10100011111111110111011011101001 e
b10101010101111011110010110010 e
b101011001011111001101010000 e
b11010000100000100010000011101110 e
b1001100001010010101100011010101 e
b11111001011101000110000011110000 e
b10100110000100010000001001011110 e
b1100101100001000100010110100100 e
b10000001010100001111001010110100 e
b10110110110100100100101010010000 e
b11101100000001101010010011100011 e
b11001100000110011101011010001 e
b1100101110010100000011101100110 e
b11011001000000010011011001001011 e
b11101100010001100010100110001011 e
b111000101000011100110011111001 e
b10110011110000000100000101010001 e
b11000001111011101111000101011001 e
b10101111010011111001000100011110 e
b10100010000010011100111110100001 e
b111000011000110011100111010110 e
b11011100000111001000010001100101 e
b11011100000111001000010001111010 e
b111000011000110011100111101011 e
b10100010000010011100111110110110 e
b10110011110000000100000101100110 e
b11010101110111100010100101100110 e
b10011110101100000101011100010101 e
b11001101001110100010000100011010 e
b10101010101111011110011000111 e
b10100011111111110111011011111110 e
b111000101000011100110100001110 e
b10100110000100010000001001110011 e
b101011001011111001101100101 e
b11010000100000100010000100000011 e
b1001100001010010101100011101010 e
b11111001011101000110000100000101 e
b1100101100001000100010110111001 e
b10000001010100001111001011001001 e
b11101100010001100010100110100000 e
b10110110110100100100101010100101 e
b11101100000001101010010011111000 e
b11001100000110011101011100110 e
b1100101110010100000011101111011 e
b11011001000000010011011001100000 e
b10101111010011111001000100110011 e
b11000001111011101111000101101110 e
